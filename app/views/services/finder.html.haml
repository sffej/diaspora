-#   Copyright (c) 2010, Diaspora Inc.  This file is
-#   licensed under the Affero General Public License version 3 or later.  See
-#   the COPYRIGHT file.

- content_for :head do
  = include_javascripts :finder

#section_header
  %h2
    = t('contacts.index.title')

= render 'shared/contact_sidebar'

.span-18.last.searchable
  = search_field_tag :contact_search, "", :id => "contact_list_search", :class => 'contact_list_search', :results => 5, :placeholder => t('search')
  %h3
    = t('.service_friends', :service => params[:provider].titleize)
  #people_stream.stream.contacts
    - if @friends.size > 0
      - for friend in @friends
        .stream_element.contact{:id => friend.id}
          .right

            - if friend.already_invited?
              = link_to t('.resend'), service_inviter_path(:uid => friend.uid, :provider => 'facebook', :invitation_id => friend.invitation_id)
            - elsif friend.on_diaspora?
              = render 'aspect_memberships/aspect_dropdown', :contact => contact_proxy(friend), :person => friend.person, :hang => 'left'
            - else
              = render 'aspect_memberships/aspect_dropdown', :contact => contact_proxy(friend), :person => friend.person, :hang => 'left', :extra_class => 'inviter', :service_uid => friend.uid

          - if friend.on_diaspora?
            = person_image_link(friend.person, :size => :thumb_small)
          - else
            = image_tag(friend.photo_url, :class => 'avatar')

          .content
            %span.from.name
              - if friend.on_diaspora?
                = link_to friend.name, person_path(friend.person)
              - else
                = friend.name

              
            .info
              - if friend.person
                = friend.person.diaspora_handle
              - else
                not yet on diaspora

      /= will_paginate @friends
    - else
      .no_contacts
        = link_to(image_tag("social_media_logos/facebook-48x48.png"), "/auth/facebook")
        %br
        %br
        %h4
          = link_to t('services.index.connect_to_facebook'), '/auth/facebook'

